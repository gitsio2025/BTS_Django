"""
Django settings for BTS_PY project.

Generated by 'django-admin startproject' using Django 5.1.7.

For more information on this file, see
https://docs.djangoproject.com/en/5.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.1/ref/settings/
"""

from pathlib import Path

import BTS_PY

# Définit le chemin absolu du répertoire racine du projet Django.
# __file__ : le fichier courant (généralement settings.py)
# resolve() : convertit le chemin relatif en chemin absolu
# parent.parent : remonte deux niveaux au-dessus → généralement le dossier du projet (contenant manage.py)
# Résultat : BASE_DIR pointe vers la racine du projet, ce qui permet de construire des chemins relatifs fiables (ex: BASE_DIR / 'templates')
BASE_DIR = Path(__file__).resolve().parent.parent

# AVERTISSEMENT DE SÉCURITÉ : gardez secrète la clé secrète utilisée en production !
SECRET_KEY = 'django-insecure-d69ij^4w*)e%ez&qzp*ztv4$cx4!wwoo+z5h4bo$9z-8vtwqg*'

# AVERTISSEMENT DE SÉCURITÉ : ne pas exécuter avec le débogage activé en production !
DEBUG = True

ALLOWED_HOSTS = []


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'livereload',
    'django.contrib.staticfiles',
    'elements',
    'auth_app',
]

# Indique à Django d’utiliser un modèle utilisateur personnalisé à la place de User par défaut.
# 'auth_app.CustomUser' fait référence au modèle CustomUser défini dans l’app 'auth_app'.
AUTH_USER_MODEL = 'auth_app.CustomUser'


MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'livereload.middleware.LiveReloadScript',
]

# Spécifie le module contenant la configuration principale des URL du projet Django.
# Ici, 'BTS_PY.urls' fait référence au fichier BTS_PY/urls.py qui définit les routes globales du site.
ROOT_URLCONF = 'BTS_PY.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

# Définit le point d’entrée WSGI de l’application pour les serveurs web (Gunicorn, uWSGI…).
# Django utilisera la fonction 'application' définie dans BTS_PY/wsgi.py pour servir les requêtes HTTP.
WSGI_APPLICATION = 'BTS_PY.wsgi.application'

# Spécifie l'URL nommée vers laquelle Django redirige les utilisateurs non connectés.
# Ici, 'connexion' correspond à une vue ou une URL nommée dans urls.py.
LOGIN_URL = 'connexion'

# Liste des routeurs de base de données personnalisés à utiliser pour le routage des modèles.
# Ici, AppDatabaseRouter contrôle quelle base utiliser pour lire/écrire les données selon l’app.
DATABASE_ROUTERS = ['BTS_PY.db_router.AppDatabaseRouter']

# Database
# https://docs.djangoproject.com/en/5.1/ref/settings/#databases

DATABASES = {

    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }
    ,

    'users': {
        'ENGINE': 'django.db.backends.mysql',
        'NAME': 'auth_users',
        'USER': 'root',
        'PASSWORD': '',
        'HOST': '127.0.0.1',
        'PORT': '3306',
    }
}

# settings.py
LOGGING_DIR = BASE_DIR / "logs"
LOGGING_DIR.mkdir(exist_ok=True)

LOGGING_FILE = LOGGING_DIR / "elements.log"

LOGGING = {
    'version': 1,
    'disable_existing_loggers': False,
    'handlers': {
        'elements_file': {
            'level': 'INFO',
            'class': 'logging.FileHandler',
            'filename': str(LOGGING_FILE),
        },
    },
    'loggers': {
        'elements': {
            'handlers': ['elements_file'],
            'level': 'INFO',
            'propagate': True,
        },
    },
}



# Password validation
# https://docs.djangoproject.com/en/5.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.1/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.1/howto/static-files/

STATIC_URL = 'static/'

# Default primary key field type
# https://docs.djangoproject.com/en/5.1/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'
